{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Testing\\\\frontend\\\\src\\\\components\\\\AddingEvent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddingEvent = () => {\n  _s();\n  const [date, setdate] = useState({\n    title: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-event-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: event => setdate(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), console.log(date)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 1\n  }, this);\n};\n_s(AddingEvent, \"T6OTo0tI+Bpdy31hzZnhaNu4LLY=\");\n_c = AddingEvent;\nexport default AddingEvent;\nvar _c;\n$RefreshReg$(_c, \"AddingEvent\");","map":{"version":3,"names":["React","useState","AddingEvent","date","setdate","title","event","target","value","console","log"],"sources":["D:/Desktop/Testing/frontend/src/components/AddingEvent.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nconst AddingEvent = () => {\r\n    const [date, setdate] = useState({\r\n      title:\"\"\r\n      \r\n    });\r\n  return (\r\n<div className=\"add-event-wrapper\">\r\n    <input type=\"date\" value={date} onChange={(event)=> setdate(event.target.value)}/>\r\n    {console.log(date)}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default AddingEvent\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA;AAEpC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC;IAC/BI,KAAK,EAAC;EAER,CAAC,CAAC;EACJ,oBACF;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAC9B;MAAO,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEF,IAAK;MAAC,QAAQ,EAAGG,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,EACjFC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEN,CAAC;AAAA,GAXKD,WAAW;AAAA,KAAXA,WAAW;AAajB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}